%iframe#psessioncheck.psessioncheck{:frameborder => "0", :height => "1", :scrolling => "no", :src => "https://counter.social/accmgt/psessioncheck.php", :width => "1"}  

- content_for :page_title do
  = t('doorkeeper.authorizations.new.title')

#form-container.form-container{:style => "display: none"}
  .oauth-prompt
    %h2= t('doorkeeper.authorizations.new.prompt', client_name: @pre_auth.client.name)

    %p
      = t('doorkeeper.authorizations.new.able_to')
      != @pre_auth.scopes.map { |scope| t(scope, scope: [:doorkeeper, :scopes]) }.map { |s| "<strong>#{s}</strong>" }.to_sentence

  = form_tag oauth_authorization_path, method: :post, class: 'simple_form' do
    = hidden_field_tag :client_id, @pre_auth.client.uid
    = hidden_field_tag :redirect_uri, @pre_auth.redirect_uri
    = hidden_field_tag :state, @pre_auth.state
    = hidden_field_tag :response_type, @pre_auth.response_type
    = hidden_field_tag :scope, @pre_auth.scope
    = button_tag t('doorkeeper.authorizations.buttons.authorize'), type: :submit

  = form_tag oauth_authorization_path, method: :delete, class: 'simple_form' do
    = hidden_field_tag :client_id, @pre_auth.client.uid
    = hidden_field_tag :redirect_uri, @pre_auth.redirect_uri
    = hidden_field_tag :state, @pre_auth.state
    = hidden_field_tag :response_type, @pre_auth.response_type
    = hidden_field_tag :scope, @pre_auth.scope
    = button_tag t('doorkeeper.authorizations.buttons.deny'), type: :submit, class: 'negative'
    
    %script{:src => "https://counter.social/CustomScripts/OauthAuthorizationsNew.js", :type => "text/javascript"}

:javascript
  setTimeout(function () {
      document.getElementById("form-container").style.display = "block";
  }, 3000);
